# Library for written output
#
# To customise your logging and results files, feel free to change any of the text
# Changing any of the {#} or ${word} variables WILL cause errors.

[help]
text = 	|  python rcm.py ./config [options]
	|  
	|  Options:
	|  
       	|  Short     Long             Use
	|  
        |   -h        --help          Displays this help.
	|  
	|      -Conflicting-
	|  
        |  -f        --full           Repeat initial scan - recheck all movies.
	|  -u        --up             Reduced update scan - only check recently added items.
        |  -p        --people         People only mode - disable all Collection scanning.	
        |  -t <num>  --tmdbid <num>   Single scan mode - check single TMDB ID for Collections.
        |  -s <num>  --start <num>    Specify start point - useful for big libraries if errors occur. (forces -f)
	|  
	|      -Independant-
	|  
        |  -q        --quiet          Disables verbose logging in command line. Log file still created.
        |  -n        --nolog          Disables log file creation - verbose logging still visible.
        |  -c        --cache          Disables automatic adding to Radarr - instead saves list of missing movies to text file.

[text]
# Open
first = No previous data found - This must be your first time?
name = Radarr Collection and People Manager by u/RhinoRhys
hello = Welcome to ${name}
dent = ---> 
bye = Found {0} Movies
	
	Thank You for using ${name}

# Errors
error = Error - 
exit = - Exiting
opts = options not compatible

people_update = ${error} people.conf has been updated.
config_update = ${error} rcm.conf has been updated.
words_update = ${error} words.conf has been updated. Please reload.

start_err = ${error} Start point {0} greater that data length {1} ${exit}

template_err = ${error} Profile template for People monitoring
int_err = not recognised as a number ${exit}
prof_err = TMDB ID not in database ${exit}

tp_err = ${error} Single scan (-t) and People only scan (-p) ${opts}. Running single scan only.
tu_err = ${error} Single scan (-t) and Reduced update scan (-u) ${opts}. Running single scan only.
up_err = ${error} Reduced update scan (-u) and People only scan (-p) ${opts}. Running reduced update scan only.
uf_err = ${error} Full initial scan (-f) and Reduced update scan (-u) ${opts} ${exit}

exiting = ${exit} at item {1}

# Modes
run_mov_mon = {0} Unchecked Movies
run_col_mon = {1} existing Collections
run_per_mon = {2} monitored People

single = Scanning:
peeps = People only mode: Ignoring Collections

full_scan = Running full scan:
	${dent} ${run_mov_mon}
	${dent} ${run_per_mon}

quick_scan = Running quick check for new database items:
	${dent} ${run_mov_mon}
     
update_scan = Running update scan:
	${dent} ${run_mov_mon}
	${dent} ${run_col_mon}
	${dent} ${run_per_mon} 

cache = Auto adding disabled: saving results to file
start = Start point specified: skipping {0} items

# API
api_auth = Unauthorized - Please check your {0} API key
api_wait = >>> Too many requests - waiting {0} seconds <<<
api_misc = >>> Unplanned error from {0} API, return code: {1} - Retrying, attempt {2} <<<

add_true = >>>                        {0}${dent} Added sucessfully
add_fail = >>>                        {0}${dent} Failed to add [Response Code: {1}]

api_retry = {0} API Error - Retry limit reached - ${exiting}
offline = ${error} {0} offline ${exiting}
retry_err = ${error} Too many failed attempts adding to Radarr - Switching to caching mode

# Movies
radarr = Radarr ID: {0}
mov_info = {1} TMDB ID: {2}{3}{4} ({5}){6}

stage_info = {0}{1}{2} (ID: {3})
other = ${stage_info}: {4} Movies in collection:
person = ${stage_info}: Monitoring: {4}

# Collection Check
col_err = {0}Error - Not Found
in_col = {0}In Collection
no_col = {0}None

file = {0}No File
unmonitored = {0}Unmonitored
checked = {0}Checked
 
# Database Check
in_data  = >>    ${radarr}${mov_info}In Database
check_data = >>    {0}${mov_info}
reject = > Rejected:
not_data = ${check_data}Adding to Wanted
ignore = ${check_data}${reject} Blacklisted
rated = ${check_data}${reject} Rating Too Low
early = ${check_data}${reject} Before {7}
ignore_zero = ${check_data}${reject} 0 in Year
found = {0}{1} TMDB ID: {2}{3}{4} ({5})

# People Check
cast = >>    Appeared in {0} Movies:
crew = >>    Credited for {0} on {1} Movies:

# Results
found_open = Total Movies Found: {0}
found_start = From Collections: {1}
found_middle = From People: {2}
auto_cache = Too many errors adding to Radarr, found_{0}.txt has been saved in the output folder instead
found_black = Blacklist entry for all movies:




